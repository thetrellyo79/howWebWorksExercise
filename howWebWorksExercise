Part One: Solidify Terminology

In your own terms, define the following terms:

What is HTTP?
  Hypertext Transfer Protocol, it’s how web browsers and servers communicate

What is a URL?
  Uniform Resource Locator, it’s like the address for a website.

What is DNS?
  Domain Name System, converts URLs into IP addresses.

What is a query string?
  Part of the link, it assigns values to specified attributes in key-value pairs

What are two HTTP verbs and how are they different?
  GET- gets data from the server (includes searches)
  POST - submits data to a server (includes surveys)

What is an HTTP request?
  Desired action to be performed for a given resource.

What is an HTTP response?
  Tells the client that the desired action has been performed or that an error has occurred.

What is an HTTP header? Give a couple examples of request and response headers you have seen.

  The HTTP headers are used to pass additional information between the clients and the server through the request and response header.

  Request header
  Authentification, Accept-Language, Cookies
  
  Response headers
  Age, Location, Server

What are the processes that happen when you type “http://somesite.com/some/page.html” into a browser?

  Your browser looks  for the appropriate IP address using DNS
  Your browser makes a request to that IP address, including headers (info about browser, any previous cookies, and other things)
  The server sends a response, whether it was a success or error
  The browser makes a DOM from that HTML, and finds any other resources needed (images, CSS, JavaScript, etc)
  The browser makes separate HTTP requests for those resources and receives response from the server for each

Part Two: Practice Tools

Using curl, make a GET request to the icanhazdadjoke.com API to find all jokes involving the word “pirate”
  curl https://icanhazdadjoke.com/j/2gii3LeN7Ed

Use dig to find what the IP address is for icanhazdadjoke.com
  SERVER: 192.168.254.254#53(192.168.254.254)
  Make a simple web page and serve it using python3 -m http.server. Visit the page in a browser.

Part Three: Explore Dev Tools
  Build a very simple HTML form that uses the GET method (it can use the same page URL for the action) when the form is submitted.

<a href="/about-us">About Us</a>

<a href="/search?q=lemurs">Search For Lemurs!</a>

<!-- will submit to URL like /search?q=value-in-input -->
<form action="/search" method="GET">
  Search for <input name="q">
  <button type="submit">Search!</button>
</form>


Add a field or two to the form and, after submitting it, explore in Chrome Developer tools how you can view the request and response headers.

Edit the page to change the form type to POST, refresh in the browser and re-submit. Do you still see the field in the query string? Explore in Chrome how you can view the request and response headers, as well as the form data.

<!-- will submit to URL add-comment, with value in body -->
<form action="add-comment" method="POST">
  <input name="comment">
  <button type="submit">Add</button>
</form>


